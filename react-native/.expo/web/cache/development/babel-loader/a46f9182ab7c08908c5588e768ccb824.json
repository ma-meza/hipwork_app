{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marc\\\\Documents\\\\trading\\\\view\\\\app\\\\screens\\\\SearchFullScreen.js\";\nimport globalStyle from \"../../assets/style/globalStyle\";\nimport { useState, useEffect } from 'react/cjs/react.development';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TouchableWithoutFeedbackBase } from \"react-native-web/dist/index\";\nimport FullPageScreen from \"./FullPageScreenTypeNoScroll\";\nexport default function WelcomeScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var searchTextInput = React.createRef();\n  useEffect(function () {\n    if (searchTextInput.current) {\n      setTimeout(function () {\n        return searchTextInput.current.focus();\n      }, 200);\n    }\n  }, []);\n  var traders = [{\n    name: \"@johnCena\"\n  }, {\n    name: \"@johnCena\"\n  }, {\n    name: \"@johnCena\"\n  }, {\n    name: \"@johnCena\"\n  }, {\n    name: \"@johnCena\"\n  }];\n  var communities = [{\n    name: \"BTC\"\n  }, {\n    name: \"BTC\"\n  }, {\n    name: \"BTC\"\n  }, {\n    name: \"BTC\"\n  }, {\n    name: \"BTC\"\n  }, {\n    name: \"BTC\"\n  }];\n\n  function handleTextChange(e) {\n    setSearch(e);\n  }\n\n  var searchHistory = [{\n    text: \"micheal\"\n  }, {\n    text: \"bitcoin\"\n  }];\n  var searchResults = [{\n    text: \"Bitcoin (BTC)\"\n  }, {\n    text: \"GBP/USD\"\n  }];\n  var searchContent;\n\n  if (search.length == 0) {\n    searchContent = React.createElement(ScrollView, {\n      style: styles.searchResultScrollView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.sectionView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: globalStyle.title2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"Recent searches\")), React.createElement(View, {\n      style: styles.sectionView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, searchHistory.map(function (query, key) {\n      return React.createElement(View, {\n        key: key,\n        style: styles.searchResultTextParentContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: styles.searchIcon,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        key: key,\n        style: styles.searchResultTextContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }\n      }, query.text)));\n    })));\n  } else {\n    searchContent = React.createElement(ScrollView, {\n      style: styles.searchResultScrollView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.sectionView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: globalStyle.title2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"Search results\")), React.createElement(View, {\n      style: styles.sectionView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, searchResults.map(function (query, key) {\n      return React.createElement(View, {\n        key: key,\n        style: styles.searchResultTextParentContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.searchIcon,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        key: key,\n        style: styles.searchResultTextContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, query.text)));\n    })));\n  }\n\n  return React.createElement(FullPageScreen, {\n    pageName: \"Search\",\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.sectionView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.searchBoxAround,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/icons/search.png\"),\n    style: styles.searchIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    multiline: false,\n    blurOnSubmit: true,\n    style: [globalStyle.regularText, styles.textInput],\n    ref: searchTextInput,\n    placeholder: \"Find traders and communities\",\n    value: search,\n    onChangeText: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }), search.length > 0 ? React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      setSearch(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 45\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/icons/x.png\"),\n    style: styles.searchIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  })) : null)), searchContent));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'blue',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  sectionView: {\n    width: \"100%\",\n    paddingBottom: 10,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingTop: 10\n  },\n  searchBoxAround: {\n    width: \"100%\",\n    borderColor: \"black\",\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 50,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  },\n  textInput: {\n    alignSelf: \"stretch\",\n    flex: 1,\n    marginRight: 10\n  },\n  searchIcon: {\n    height: 30,\n    width: 30,\n    marginRight: 10\n  },\n  postCardContainer: {\n    borderWidth: 1,\n    borderColor: \"#000\",\n    padding: 10,\n    borderRadius: 5\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'green',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  searchResultScrollView: {\n    flex: 1\n  },\n  searchResultTextParentContainer: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\"\n  },\n  searchResultTextContainer: {\n    borderBottomWidth: 1,\n    borderBottomColor: \"#a1a1a1\",\n    paddingBottom: 20,\n    paddingTop: 20,\n    flex: 1,\n    alignSelf: \"stretch\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Marc/Documents/trading/view/app/screens/SearchFullScreen.js"],"names":["globalStyle","useState","useEffect","React","TouchableWithoutFeedbackBase","FullPageScreen","WelcomeScreen","navigation","route","search","setSearch","searchTextInput","createRef","current","setTimeout","focus","traders","name","communities","handleTextChange","e","searchHistory","text","searchResults","searchContent","length","styles","searchResultScrollView","sectionView","title2","map","query","key","searchResultTextParentContainer","searchIcon","searchResultTextContainer","flex","searchBoxAround","require","regularText","textInput","StyleSheet","create","container","backgroundColor","alignItems","justifyContent","width","paddingBottom","paddingLeft","paddingRight","paddingTop","borderColor","borderWidth","padding","borderRadius","flexDirection","alignSelf","marginRight","height","postCardContainer","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import globalStyle from \"../../assets/style/globalStyle\"\r\nimport { useState, useEffect } from 'react/cjs/react.development';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, TouchableWithoutFeedback, TextInput, Image, ScrollView, TouchableWithoutFeedbackBase} from 'react-native';\r\nimport FullPageScreen from \"./FullPageScreenTypeNoScroll\";\r\n\r\n\r\nexport default function WelcomeScreen({navigation, route}) {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    let searchTextInput = React.createRef();\r\n\r\n    useEffect(() => {\r\n        if (searchTextInput.current) {\r\n          setTimeout(() => searchTextInput.current.focus(), 200);\r\n        }\r\n      }, []);\r\n\r\n    let traders = [\r\n      {\r\n        name:\"@johnCena\"\r\n      },\r\n      {\r\n          name:\"@johnCena\"\r\n        },\r\n        {\r\n          name:\"@johnCena\"\r\n        },\r\n        {\r\n          name:\"@johnCena\"\r\n        },\r\n        {\r\n          name:\"@johnCena\"\r\n        }\r\n    ]\r\n  \r\n    let communities = [\r\n        {\r\n            name:\"BTC\"\r\n        },\r\n        {\r\n          name:\"BTC\"\r\n      },\r\n      {\r\n          name:\"BTC\"\r\n      },\r\n      {\r\n          name:\"BTC\"\r\n      },\r\n      {\r\n          name:\"BTC\"\r\n      },\r\n      {\r\n          name:\"BTC\"\r\n      }\r\n    ];\r\n\r\n    function handleTextChange(e){\r\n        setSearch(e);\r\n    }\r\n\r\n    let searchHistory = [\r\n        {\r\n            text:\"micheal\"\r\n        },\r\n        {\r\n            text:\"bitcoin\"\r\n        }\r\n    ]\r\n    let searchResults = [\r\n        {\r\n            text:\"Bitcoin (BTC)\"\r\n        },\r\n        {\r\n            text:\"GBP/USD\"\r\n        }\r\n    ]\r\n\r\n   let searchContent;\r\n   if(search.length == 0){\r\n    searchContent = (\r\n        <ScrollView style={styles.searchResultScrollView}>\r\n            <View style={styles.sectionView}>\r\n                <Text style={globalStyle.title2}>Recent searches</Text>\r\n            </View>\r\n            <View style={styles.sectionView}>\r\n                {\r\n                searchHistory.map((query, key) => {\r\n                    return (\r\n                    <View key={key} style={styles.searchResultTextParentContainer}>\r\n                        <Image style={styles.searchIcon} /> \r\n                        <View key={key} style={styles.searchResultTextContainer}>\r\n                            <Text>{query.text}</Text>\r\n                        </View>\r\n                    </View>\r\n                    \r\n                    );\r\n                })\r\n                }\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n   }else{\r\n       searchContent = (\r\n        <ScrollView style={styles.searchResultScrollView}>\r\n        <View style={styles.sectionView}>\r\n            <Text style={globalStyle.title2}>Search results</Text>\r\n        </View>\r\n        <View style={styles.sectionView}>\r\n            {\r\n            searchResults.map((query, key) => {\r\n                return (\r\n                <View key={key} style={styles.searchResultTextParentContainer}>\r\n                    <Image style={styles.searchIcon} /> \r\n                    <View key={key} style={styles.searchResultTextContainer}>\r\n                        <Text>{query.text}</Text>\r\n                    </View>\r\n                </View>\r\n                );\r\n            })\r\n            }\r\n        </View>\r\n    </ScrollView>\r\n       );\r\n   }\r\n\r\n  return (\r\n      <FullPageScreen pageName={\"Search\"} navigation={navigation}>\r\n        <View style={{flex:1}}>\r\n            <View style={styles.sectionView}>\r\n                <View style={styles.searchBoxAround}>\r\n                    <Image source={require(\"../../assets/icons/search.png\")} style={styles.searchIcon}/>\r\n                    <TextInput multiline={false} blurOnSubmit={true} style={[globalStyle.regularText, styles.textInput]} ref={searchTextInput} placeholder=\"Find traders and communities\" value={search} onChangeText={handleTextChange} />\r\n                    {\r\n                        search.length > 0 ? <TouchableWithoutFeedback onPress={()=>{\r\n                            setSearch(\"\");\r\n                        }}>\r\n                            <Image source={require(\"../../assets/icons/x.png\")} style={styles.searchIcon}/>\r\n                        </TouchableWithoutFeedback> : null\r\n                    }\r\n                </View>\r\n            </View>\r\n            {searchContent}  \r\n        </View>\r\n      </FullPageScreen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'blue',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  sectionView:{\r\n    width:\"100%\",\r\n    paddingBottom:10,\r\n    paddingLeft:15,\r\n    paddingRight:15,\r\n    paddingTop:10,\r\n  },\r\n  searchBoxAround:{\r\n    width:\"100%\",\r\n    borderColor:\"black\",\r\n    borderWidth:1,\r\n    padding:10,\r\n    borderRadius:50,\r\n    flexDirection:\"row\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"flex-start\",\r\n  },\r\n  textInput:{\r\n    alignSelf:\"stretch\",\r\n    flex:1,\r\n    marginRight:10\r\n  },\r\n  searchIcon:{\r\n    height:30,\r\n    width:30,\r\n    marginRight:10\r\n  },\r\n  postCardContainer:{\r\n    borderWidth:1,\r\n    borderColor:\"#000\",\r\n    padding:10,\r\n    borderRadius:5\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'green',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  searchResultScrollView:{\r\n      flex:1\r\n  },\r\n  searchResultTextParentContainer:{\r\n    width:\"100%\",\r\n    flexDirection:\"row\",\r\n    justifyContent:\"flex-start\",\r\n    alignItems:\"center\"\r\n  },\r\n  searchResultTextContainer:{\r\n      borderBottomWidth:1,\r\n      borderBottomColor:\"#a1a1a1\",\r\n      paddingBottom:20,\r\n    paddingTop:20,\r\n    flex:1,\r\n    alignSelf:\"stretch\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}