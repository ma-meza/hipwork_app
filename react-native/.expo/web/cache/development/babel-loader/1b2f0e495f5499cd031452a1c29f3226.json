{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marc\\\\Documents\\\\trading\\\\view\\\\app\\\\screens\\\\SigninScreen.js\";\nimport { AuthContext } from \"../components/context\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomButton from \"../components/button\";\n\nvar globalStyle = require(\"../../assets/style/globalStyle\");\n\nexport default function FullPageScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route,\n      pageName = _ref.pageName,\n      children = _ref.children;\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorText = _useState6[0],\n      setErrorText = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isEmailActive = _useState8[0],\n      setEmailActive = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isPasswordActive = _useState10[0],\n      setPasswordActive = _useState10[1];\n\n  var handleLogin = function handleLogin(email, pass) {\n    setErrorText(\"\");\n\n    if (email.length > 0 && password.length > 0) {\n      signIn(email, pass, function (apiError) {\n        setErrorText(apiError);\n      });\n    } else {\n      setErrorText(\"Please fill in your email and password.\");\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.scrollView,\n    keyboardShouldPersistTaps: \"handled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.topBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableNativeFeedback, {\n    onPress: function onPress() {\n      navigation.navigate('tabHome', {});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.arrowImage,\n    source: require(\"../../assets/icons/left-arrow.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: globalStyle.title1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Sign in\")), React.createElement(View, {\n    style: styles.contentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, errorText.length > 0 ? React.createElement(Text, {\n    style: [globalStyle.errorText, {\n      marginBottom: 15\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 34\n    }\n  }, errorText) : null, React.createElement(Text, {\n    style: [globalStyle.regularText, {\n      marginBottom: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    blurOnSubmit: true,\n    style: [styles.inputText, globalStyle.regularText, {\n      backgroundColor: isEmailActive ? \"#fff\" : \"#e1e1e1\",\n      borderWidth: isEmailActive ? 1 : null,\n      borderColor: isEmailActive ? \"#000\" : null\n    }],\n    value: email,\n    onBlur: function onBlur() {\n      setEmailActive(false);\n    },\n    onFocus: function onFocus() {\n      setEmailActive(true);\n    },\n    onChangeText: setEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: [globalStyle.regularText, {\n      marginBottom: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    blurOnSubmit: true,\n    style: [styles.inputText, globalStyle.regularText, {\n      backgroundColor: isPasswordActive ? \"#fff\" : \"#e1e1e1\",\n      borderWidth: isPasswordActive ? 1 : null,\n      borderColor: isPasswordActive ? \"#000\" : null\n    }],\n    value: password,\n    onBlur: function onBlur() {\n      setPasswordActive(false);\n    },\n    onFocus: function onFocus() {\n      setPasswordActive(true);\n    },\n    onChangeText: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      navigation.navigate('signupScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [globalStyle.regularTextBold, {\n      marginBottom: 30,\n      textDecorationLine: \"underline\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Don't have an account?\")), React.createElement(CustomButton, {\n    title: \"Continue\",\n    onPress: function onPress() {\n      handleLogin(email, password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  scrollView: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  topBar: {\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    top: 0,\n    height: 80,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    paddingLeft: 15,\n    flexDirection: \"row\"\n  },\n  arrowImage: {\n    height: 40,\n    width: 40,\n    marginRight: 10\n  },\n  contentContainer: {\n    top: 0,\n    width: \"100%\",\n    left: 0,\n    backgroundColor: \"#fff\",\n    alignSelf: \"stretch\",\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  inputText: {\n    borderRadius: 10,\n    height: 55,\n    marginBottom: 15,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  activeInput: {\n    borderColor: \"#000\",\n    borderWidth: 1\n  },\n  button: {\n    backgroundColor: \"#00cc99\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    alignItems: \"center\",\n    height: 55\n  }\n});","map":{"version":3,"sources":["C:/Users/Marc/Documents/trading/view/app/screens/SigninScreen.js"],"names":["AuthContext","React","useState","CustomButton","globalStyle","require","FullPageScreen","navigation","route","pageName","children","useContext","signIn","email","setEmail","password","setPassword","errorText","setErrorText","isEmailActive","setEmailActive","isPasswordActive","setPasswordActive","handleLogin","pass","length","apiError","styles","container","scrollView","topBar","navigate","arrowImage","title1","contentContainer","marginBottom","regularText","inputText","backgroundColor","borderWidth","borderColor","regularTextBold","textDecorationLine","StyleSheet","create","width","height","flex","alignItems","justifyContent","paddingTop","Platform","OS","StatusBar","currentHeight","top","paddingLeft","flexDirection","marginRight","left","alignSelf","paddingRight","borderRadius","activeInput","button"],"mappings":"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","sourcesContent":["import { AuthContext } from '../components/context';\r\nimport React, {useState} from 'react';\r\nimport { StyleSheet, Text, View,TextInput, Platform, StatusBar,SafeAreaView, Image, TouchableOpacity,TouchableWithoutFeedback, TouchableHighlight, Alert, TouchableNativeFeedback, Button, ScrollView } from 'react-native';\r\nimport CustomButton from \"../components/button\";\r\nconst globalStyle = require('../../assets/style/globalStyle');\r\n\r\n\r\n\r\nexport default function FullPageScreen({navigation, route, pageName, children}) {\r\n    const {signIn} = React.useContext(AuthContext);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [errorText, setErrorText] = useState(\"\");\r\n\r\n    const [isEmailActive, setEmailActive] = useState(false);\r\n    const [isPasswordActive, setPasswordActive] = useState(false);\r\n    const handleLogin = (email, pass) => {\r\n        setErrorText(\"\");\r\n        if(email.length>0 && password.length>0){\r\n            signIn(email, pass, (apiError)=>{\r\n                setErrorText(apiError);\r\n            });\r\n        }else{\r\n            setErrorText(\"Please fill in your email and password.\");\r\n        }\r\n    };\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n        <ScrollView style={styles.scrollView} keyboardShouldPersistTaps=\"handled\">\r\n        <View style={styles.topBar}>\r\n            <TouchableNativeFeedback onPress={()=>{navigation.navigate('tabHome', {})}}>\r\n                <Image style={styles.arrowImage} source={require(\"../../assets/icons/left-arrow.png\")} />\r\n            </TouchableNativeFeedback>\r\n            <Text style={globalStyle.title1}>Sign in</Text>\r\n        </View>\r\n        <View style={styles.contentContainer}>\r\n            {errorText.length>0? <Text style={[globalStyle.errorText, {marginBottom:15}]}>{errorText}</Text>:null}\r\n            <Text style={[globalStyle.regularText, {marginBottom:10}]}>Email</Text>\r\n            <TextInput blurOnSubmit={true} style={[styles.inputText, globalStyle.regularText, {backgroundColor:isEmailActive?\"#fff\":\"#e1e1e1\", borderWidth:isEmailActive?1:null, borderColor:isEmailActive?\"#000\":null}]} value={email} onBlur={()=>{setEmailActive(false)}} onFocus={()=>{setEmailActive(true)}} onChangeText={setEmail}/>\r\n            <Text style={[globalStyle.regularText, {marginBottom:10}]}>Password</Text>\r\n            <TextInput blurOnSubmit={true} style={[styles.inputText, globalStyle.regularText, {backgroundColor:isPasswordActive?\"#fff\":\"#e1e1e1\", borderWidth:isPasswordActive?1:null, borderColor:isPasswordActive?\"#000\":null}]} value={password} onBlur={()=>{setPasswordActive(false)}} onFocus={()=>{setPasswordActive(true)}} onChangeText={setPassword}/>\r\n            <TouchableWithoutFeedback onPress={()=>{navigation.navigate('signupScreen')}}>\r\n                <Text style={[globalStyle.regularTextBold, {marginBottom:30, textDecorationLine:\"underline\"}]}>Don't have an account?</Text>\r\n            </TouchableWithoutFeedback>\r\n            <CustomButton title=\"Continue\" onPress={()=>{handleLogin(email, password)}}/>\r\n        </View>\r\n        </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollView:{\r\n        width:\"100%\",\r\n        height:\"100%\"\r\n    },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight:0\r\n  },\r\n  topBar:{\r\n    width:\"100%\",\r\n    backgroundColor:\"#fff\",\r\n    top:0,\r\n    height:80,\r\n    justifyContent:\"flex-start\",\r\n    alignItems:\"center\",\r\n    paddingLeft:15,\r\n    flexDirection:\"row\"\r\n  },\r\n  arrowImage:{\r\n      height:40,\r\n      width:40,\r\n      marginRight:10\r\n  },\r\n  contentContainer:{\r\n      top:0,\r\n      width:\"100%\",\r\n      left:0,\r\n      backgroundColor:\"#fff\",\r\n      alignSelf:\"stretch\",\r\n      flex:1,\r\n      paddingLeft:15,\r\n      paddingRight:15\r\n  },\r\n  inputText:{\r\n    borderRadius:10,\r\n    height:55,\r\n    marginBottom:15,\r\n    paddingLeft:10,\r\n    paddingRight:10\r\n  },\r\n  activeInput:{\r\n      borderColor:\"#000\",\r\n      borderWidth:1\r\n  },\r\n  button:{\r\n      backgroundColor:\"#00cc99\",\r\n      justifyContent:\"center\",\r\n      borderRadius:10,\r\n      alignItems:\"center\",\r\n      height:55\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}