{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marc\\\\Documents\\\\trading\\\\view\\\\app\\\\screens\\\\SignupScreen.js\";\nimport { AuthContext } from \"../components/context\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"../components/button\";\n\nvar globalStyle = require(\"../../assets/style/globalStyle\");\n\nexport default function FullPageScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route,\n      pageName = _ref.pageName,\n      children = _ref.children;\n\n  var _React$useContext = React.useContext(AuthContext),\n      signUp = _React$useContext.signUp;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      username = _useState6[0],\n      setUsername = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorText = _useState8[0],\n      setErrorText = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isEmailActive = _useState10[0],\n      setEmailActive = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isUsernameActive = _useState12[0],\n      setUsernameActive = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isPasswordActive = _useState14[0],\n      setPasswordActive = _useState14[1];\n\n  var handleSignup = function handleSignup(email, pass) {\n    if (email.length > 0 && password.length > 0 && username.length > 0) {\n      signUp(email, pass);\n    } else {\n      setErrorText(\"Please fill in your email, password, and username.\");\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.scrollView,\n    keyboardShouldPersistTaps: \"handled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.topBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableNativeFeedback, {\n    onPress: function onPress() {\n      navigation.navigate('tabHome', {});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.arrowImage,\n    source: require(\"../../assets/icons/left-arrow.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: globalStyle.title1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Sign up\")), React.createElement(View, {\n    style: styles.contentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, errorText.length > 0 ? React.createElement(Text, {\n    style: [globalStyle.errorText, {\n      marginBottom: 15\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 34\n    }\n  }, errorText) : null, React.createElement(Text, {\n    style: [globalStyle.regularText, {\n      marginBottom: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Username\"), React.createElement(TextInput, {\n    style: [styles.inputText, globalStyle.regularText, {\n      backgroundColor: isEmailActive ? \"#fff\" : \"#e1e1e1\",\n      borderWidth: isEmailActive ? 1 : null,\n      borderColor: isEmailActive ? \"#000\" : null\n    }],\n    value: username,\n    onBlur: function onBlur() {\n      setUsernameActive(false);\n    },\n    onFocus: function onFocus() {\n      setUsernameActive(true);\n    },\n    onChangeText: setUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: [globalStyle.regularText, {\n      marginBottom: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    style: [styles.inputText, globalStyle.regularText, {\n      backgroundColor: isEmailActive ? \"#fff\" : \"#e1e1e1\",\n      borderWidth: isEmailActive ? 1 : null,\n      borderColor: isEmailActive ? \"#000\" : null\n    }],\n    value: email,\n    onBlur: function onBlur() {\n      setEmailActive(false);\n    },\n    onFocus: function onFocus() {\n      setEmailActive(true);\n    },\n    onChangeText: setEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: [globalStyle.regularText, {\n      marginBottom: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: [styles.inputText, globalStyle.regularText, {\n      backgroundColor: isPasswordActive ? \"#fff\" : \"#e1e1e1\",\n      borderWidth: isPasswordActive ? 1 : null,\n      borderColor: isPasswordActive ? \"#000\" : null\n    }],\n    value: password,\n    onBlur: function onBlur() {\n      setPasswordActive(false);\n    },\n    onFocus: function onFocus() {\n      setPasswordActive(true);\n    },\n    onChangeText: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      navigation.navigate('signinScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [globalStyle.regularTextBold, {\n      marginBottom: 30,\n      textDecorationLine: \"underline\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Already have an account?\")), React.createElement(Button, {\n    onPress: function onPress() {\n      handleSignup(email, password);\n    },\n    title: \"Continue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  scrollView: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  topBar: {\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    top: 0,\n    height: 80,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    paddingLeft: 15,\n    flexDirection: \"row\"\n  },\n  arrowImage: {\n    height: 40,\n    width: 40,\n    marginRight: 10\n  },\n  contentContainer: {\n    top: 0,\n    width: \"100%\",\n    left: 0,\n    backgroundColor: \"#fff\",\n    alignSelf: \"stretch\",\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  inputText: {\n    borderRadius: 10,\n    height: 55,\n    marginBottom: 15,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  activeInput: {\n    borderColor: \"#000\",\n    borderWidth: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Marc/Documents/trading/view/app/screens/SignupScreen.js"],"names":["AuthContext","React","useState","Button","globalStyle","require","FullPageScreen","navigation","route","pageName","children","useContext","signUp","email","setEmail","password","setPassword","username","setUsername","errorText","setErrorText","isEmailActive","setEmailActive","isUsernameActive","setUsernameActive","isPasswordActive","setPasswordActive","handleSignup","pass","length","styles","container","scrollView","topBar","navigate","arrowImage","title1","contentContainer","marginBottom","regularText","inputText","backgroundColor","borderWidth","borderColor","regularTextBold","textDecorationLine","StyleSheet","create","width","height","flex","alignItems","justifyContent","paddingTop","Platform","OS","StatusBar","currentHeight","top","paddingLeft","flexDirection","marginRight","left","alignSelf","paddingRight","borderRadius","activeInput"],"mappings":"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","sourcesContent":["import { AuthContext } from '../components/context';\r\nimport React, {useState} from 'react';\r\nimport { StyleSheet, Text, View,TextInput, Platform, StatusBar,SafeAreaView, Image, TouchableOpacity,TouchableWithoutFeedback, TouchableHighlight, Alert, TouchableNativeFeedback, ScrollView } from 'react-native';\r\nimport Button from \"../components/button\";\r\nconst globalStyle = require('../../assets/style/globalStyle');\r\n\r\n\r\n\r\nexport default function FullPageScreen({navigation, route, pageName, children}) {\r\n    const {signUp} = React.useContext(AuthContext);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n\r\n    const [errorText, setErrorText] = useState(\"\");\r\n\r\n    const [isEmailActive, setEmailActive] = useState(false);\r\n    const [isUsernameActive, setUsernameActive] = useState(false);\r\n    const [isPasswordActive, setPasswordActive] = useState(false);\r\n    const handleSignup = (email, pass) => {\r\n        if(email.length>0 && password.length>0 && username.length >0){\r\n            signUp(email, pass);\r\n        }else{\r\n            setErrorText(\"Please fill in your email, password, and username.\");\r\n        }\r\n    };\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n        <ScrollView style={styles.scrollView} keyboardShouldPersistTaps=\"handled\">\r\n        <View style={styles.topBar}>\r\n            <TouchableNativeFeedback onPress={()=>{navigation.navigate('tabHome', {})}}>\r\n                <Image style={styles.arrowImage} source={require(\"../../assets/icons/left-arrow.png\")} />\r\n            </TouchableNativeFeedback>\r\n            <Text style={globalStyle.title1}>Sign up</Text>\r\n        </View>\r\n        <View style={styles.contentContainer}>\r\n            {errorText.length>0? <Text style={[globalStyle.errorText, {marginBottom:15}]}>{errorText}</Text>:null}\r\n            <Text style={[globalStyle.regularText, {marginBottom:10}]}>Username</Text>\r\n            <TextInput style={[styles.inputText, globalStyle.regularText, {backgroundColor:isEmailActive?\"#fff\":\"#e1e1e1\", borderWidth:isEmailActive?1:null, borderColor:isEmailActive?\"#000\":null}]} value={username} onBlur={()=>{setUsernameActive(false)}} onFocus={()=>{setUsernameActive(true)}} onChangeText={setUsername}/>\r\n            <Text style={[globalStyle.regularText, {marginBottom:10}]}>Email</Text>\r\n            <TextInput style={[styles.inputText, globalStyle.regularText, {backgroundColor:isEmailActive?\"#fff\":\"#e1e1e1\", borderWidth:isEmailActive?1:null, borderColor:isEmailActive?\"#000\":null}]} value={email} onBlur={()=>{setEmailActive(false)}} onFocus={()=>{setEmailActive(true)}} onChangeText={setEmail}/>\r\n            <Text style={[globalStyle.regularText, {marginBottom:10}]}>Password</Text>\r\n            <TextInput style={[styles.inputText, globalStyle.regularText, {backgroundColor:isPasswordActive?\"#fff\":\"#e1e1e1\", borderWidth:isPasswordActive?1:null, borderColor:isPasswordActive?\"#000\":null}]} value={password} onBlur={()=>{setPasswordActive(false)}} onFocus={()=>{setPasswordActive(true)}} onChangeText={setPassword}/>\r\n            <TouchableWithoutFeedback onPress={()=>{navigation.navigate('signinScreen')}}>\r\n                <Text style={[globalStyle.regularTextBold, {marginBottom:30, textDecorationLine:\"underline\"}]}>Already have an account?</Text>\r\n            </TouchableWithoutFeedback>\r\n            <Button onPress={()=>{handleSignup(email, password)}} title={\"Continue\"}/>\r\n        </View>\r\n        </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollView:{\r\n        width:\"100%\",\r\n        height:\"100%\"\r\n    },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight:0\r\n  },\r\n  topBar:{\r\n    width:\"100%\",\r\n    backgroundColor:\"#fff\",\r\n    top:0,\r\n    height:80,\r\n    justifyContent:\"flex-start\",\r\n    alignItems:\"center\",\r\n    paddingLeft:15,\r\n    flexDirection:\"row\"\r\n  },\r\n  arrowImage:{\r\n      height:40,\r\n      width:40,\r\n      marginRight:10\r\n  },\r\n  contentContainer:{\r\n      top:0,\r\n      width:\"100%\",\r\n      left:0,\r\n      backgroundColor:\"#fff\",\r\n      alignSelf:\"stretch\",\r\n      flex:1,\r\n      paddingLeft:15,\r\n      paddingRight:15\r\n  },\r\n  inputText:{\r\n    borderRadius:10,\r\n    height:55,\r\n    marginBottom:15,\r\n    paddingLeft:10,\r\n    paddingRight:10\r\n  },\r\n  activeInput:{\r\n      borderColor:\"#000\",\r\n      borderWidth:1\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}