{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marc\\\\Documents\\\\trading\\\\view\\\\app\\\\screens\\\\SubscriptionGroupScreen.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport GroupChatScreen from \"./GroupChatScreen\";\n\nvar globalStyle = require(\"../../assets/style/globalStyle\");\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar TabNav = createMaterialTopTabNavigator();\nexport default function FullPageScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route,\n      pageName = _ref.pageName,\n      children = _ref.children;\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.topBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableNativeFeedback, {\n    onPress: function onPress() {\n      navigation.navigate('tabHome', {});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.arrowImage,\n    source: require(\"../../assets/icons/left-arrow.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [globalStyle.title2, {\n      marginBottom: 5\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"@mark31\"), React.createElement(Text, {\n    style: [globalStyle.regularText, {\n      color: \"#a1a1a1\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"11 members\"))), React.createElement(View, {\n    style: styles.contentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(TabNav.Navigator, {\n    upperCaseLabel: false,\n    tabBarOptions: {\n      labelStyle: [globalStyle.regularTextBold, {\n        textTransform: 'none'\n      }],\n      tabStyle: {\n        width: 85\n      },\n      indicatorStyle: {\n        backgroundColor: \"black\"\n      },\n      style: {\n        backgroundColor: 'white',\n        borderBottomWidth: 1,\n        borderBottomColor: \"#a1a1a1\",\n        elevation: 0\n      },\n      activeTintColor: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(TabNav.Screen, {\n    name: \"Posts\",\n    component: GroupChatScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), React.createElement(TabNav.Screen, {\n    name: \"Signals\",\n    component: GroupChatScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), React.createElement(TabNav.Screen, {\n    name: \"Chat\",\n    component: GroupChatScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  topBar: {\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    top: 0,\n    height: 80,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    paddingLeft: 15,\n    flexDirection: \"row\"\n  },\n  arrowImage: {\n    height: 40,\n    width: 40,\n    marginRight: 10\n  },\n  contentContainer: {\n    top: 0,\n    width: \"100%\",\n    left: 0,\n    backgroundColor: \"#fff\",\n    alignSelf: \"stretch\",\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Marc/Documents/trading/view/app/screens/SubscriptionGroupScreen.js"],"names":["React","createMaterialTopTabNavigator","GroupChatScreen","globalStyle","require","Dimensions","get","width","height","TabNav","FullPageScreen","navigation","route","pageName","children","styles","container","topBar","navigate","arrowImage","title2","marginBottom","regularText","color","contentContainer","labelStyle","regularTextBold","textTransform","tabStyle","indicatorStyle","backgroundColor","style","borderBottomWidth","borderBottomColor","elevation","activeTintColor","StyleSheet","create","flex","alignItems","justifyContent","paddingTop","Platform","OS","StatusBar","currentHeight","top","paddingLeft","flexDirection","marginRight","left","alignSelf"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, Platform, StatusBar,SafeAreaView, Image, TouchableOpacity, Alert, TouchableNativeFeedback, Button, ScrollView, FlatList, Animated, Dimensions } from 'react-native';\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\n\r\nimport GroupChatScreen from \"./GroupChatScreen\";\r\n\r\nconst globalStyle = require('../../assets/style/globalStyle');\r\n\r\nconst {width, height} = Dimensions.get(\"screen\");\r\n\r\n\r\nconst TabNav = createMaterialTopTabNavigator();\r\n\r\n\r\nexport default function FullPageScreen({navigation, route, pageName, children}) {\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n        <View style={styles.topBar}>\r\n            <TouchableNativeFeedback onPress={()=>{navigation.navigate('tabHome', {})}}>\r\n                <Image style={styles.arrowImage} source={require(\"../../assets/icons/left-arrow.png\")} />\r\n            </TouchableNativeFeedback>\r\n            <View>\r\n                <Text style={[globalStyle.title2, {marginBottom:5}]}>@mark31</Text>\r\n                <Text style={[globalStyle.regularText, {color:\"#a1a1a1\"}]}>11 members</Text>\r\n            </View>\r\n        </View>\r\n        <View style={styles.contentContainer}>\r\n        <TabNav.Navigator upperCaseLabel={false} tabBarOptions={{\r\n                labelStyle: [globalStyle.regularTextBold, { textTransform: 'none' }],\r\n                tabStyle: { width: 85 },\r\n                indicatorStyle:{backgroundColor:\"black\"},\r\n                style: { backgroundColor: 'white', borderBottomWidth:1, borderBottomColor:\"#a1a1a1\", elevation:0 },\r\n                activeTintColor:\"black\"\r\n            }}>\r\n                <TabNav.Screen name=\"Posts\" component={GroupChatScreen}>\r\n\r\n                </TabNav.Screen>\r\n                <TabNav.Screen name=\"Signals\" component={GroupChatScreen}>\r\n\r\n                </TabNav.Screen>\r\n                <TabNav.Screen name=\"Chat\" component={GroupChatScreen}>\r\n\r\n                </TabNav.Screen>\r\n            </TabNav.Navigator>\r\n        </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight:0\r\n  },\r\n  topBar:{\r\n    width:\"100%\",\r\n    backgroundColor:\"#fff\",\r\n    top:0,\r\n    height:80,\r\n    justifyContent:\"flex-start\",\r\n    alignItems:\"center\",\r\n    paddingLeft:15,\r\n    flexDirection:\"row\"\r\n  },\r\n  arrowImage:{\r\n      height:40,\r\n      width:40,\r\n      marginRight:10\r\n  },\r\n  contentContainer:{\r\n      top:0,\r\n      width:\"100%\",\r\n      left:0,\r\n      backgroundColor:\"#fff\",\r\n      alignSelf:\"stretch\",\r\n      flex:1\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}