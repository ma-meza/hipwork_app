{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marc\\\\Documents\\\\trading\\\\view\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { useFonts } from \"@use-expo/font\";\nimport * as Font from \"expo-font\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Tabs from \"./app/navigation/Tabs\";\nimport GuestTabs from \"./app/navigation/GuestTabs\";\nimport SettingsScreen from \"./app/screens/SettingsScreen\";\nimport SearchFullScreen from \"./app/screens/SearchFullScreen\";\nimport SubscriptionGroupScreen from \"./app/screens/SubscriptionGroupScreen\";\nimport CommunityGroupScreen from \"./app/screens/CommunityGroupScreen\";\nimport WelcomeScreen from \"./app/screens/WelcomeScreen\";\nimport SigninScreen from \"./app/screens/SigninScreen\";\nimport SignupScreen from \"./app/screens/SignupScreen\";\nimport ProfileOverviewScreen from \"./app/screens/ProfileOverview\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect, useState } from 'react/cjs/react.development';\nimport { AuthContext } from \"./app/components/context\";\nimport axios from \"axios\";\nvar customFonts = {\n  \"Aktiv Regular\": require(\"./assets/fonts/AktivGroteskCorp-Regular.ttf\"),\n  \"Aktiv Bold\": require(\"./assets/fonts/AktivGroteskCorp-Bold.ttf\"),\n  \"Larsseit Bold\": require(\"./assets/fonts/Larsseit-ExtraBold.ttf\")\n};\nvar Stack = createStackNavigator();\n\nfunction _loadFontsAsync(cb) {\n  return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n        case 2:\n          cb();\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\n;\n\nif (process.env.NODE_ENV && process.env.NODE_ENV == \"development\") {\n  window.api_prefix = \"http://192.168.2.20:8080\";\n} else {\n  window.api_prefix = \"https://api.traderz.com\";\n}\n\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFontLoading = _useState2[0],\n      setIsFontLoading = _useState2[1];\n\n  var initialSigninState = {\n    isAppLoading: true,\n    userToken: null,\n    userName: null\n  };\n\n  var signinReducer = function signinReducer(prevState, action) {\n    switch (action.type) {\n      case \"RETRIEVE_TOKEN\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isAppLoading: false\n        });\n\n      case \"SIGNIN\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isAppLoading: false\n        });\n\n      case \"SIGNOUT\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          userToken: null,\n          isAppLoading: false\n        });\n\n      case \"SIGNUP\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isAppLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(signinReducer, initialSigninState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      signinState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(email, password, cb) {\n        var userToken;\n        return _regeneratorRuntime.async(function signIn$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                userToken = null;\n                axios.post(window.api_prefix + \"/login\", {\n                  email: email,\n                  password: password\n                }).then(function (resp) {\n                  if (resp.data.success == false) {\n                    cb(resp.data.message);\n                  }\n                }).catch(function (err) {\n                  cb(\"There has been a server error, please try again.\");\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n              case 3:\n                _context3.next = 8;\n                break;\n\n              case 5:\n                _context3.prev = 5;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 8:\n                dispatch({\n                  type: \"SIGNOUT\"\n                });\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signUp: function signUp() {\n        setUserToken(\"eidmeik\");\n        setIsAppLoading(false);\n      }\n    };\n  }, []);\n\n  _loadFontsAsync(function () {\n    setIsFontLoading(false);\n  });\n\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              userToken = null;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 4:\n              userToken = _context4.sent;\n\n              if (userToken != null) {\n                dispatch({\n                  type: \"RETRIEVE_TOKEN\",\n                  token: \"dnjsdnj\"\n                });\n              } else {\n                dispatch({\n                  type: \"SIGNOUT\"\n                });\n              }\n\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.log(_context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    }, 1000);\n  }, []);\n\n  if (isFontLoading) {\n    return null;\n  }\n\n  if (signinState.isAppLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"rgba(0,0,0,0)\",\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }), React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, signinState.userToken != null ? React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"tabHome\",\n    component: Tabs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"settings\",\n    component: SettingsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"searchfullscreen\",\n    component: SearchFullScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"group_screen\",\n    component: SubscriptionGroupScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"community_screen\",\n    component: CommunityGroupScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"profileOverviewScreen\",\n    component: ProfileOverviewScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  })) : React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"tabHome\",\n    component: GuestTabs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"signinScreen\",\n    component: SigninScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"signupScreen\",\n    component: SignupScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"searchfullscreen\",\n    component: SearchFullScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"profileOverviewScreen\",\n    component: ProfileOverviewScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Marc/Documents/trading/view/App.js"],"names":["useFonts","Font","StatusBar","React","NavigationContainer","createStackNavigator","Tabs","GuestTabs","SettingsScreen","SearchFullScreen","SubscriptionGroupScreen","CommunityGroupScreen","WelcomeScreen","SigninScreen","SignupScreen","ProfileOverviewScreen","AsyncStorage","useEffect","useState","AuthContext","axios","customFonts","require","Stack","_loadFontsAsync","cb","loadAsync","process","env","NODE_ENV","window","api_prefix","App","isFontLoading","setIsFontLoading","initialSigninState","isAppLoading","userToken","userName","signinReducer","prevState","action","type","token","id","useReducer","signinState","dispatch","authContext","useMemo","signIn","email","password","post","then","resp","data","success","message","catch","err","signOut","removeItem","console","log","signUp","setUserToken","setIsAppLoading","setTimeout","getItem","flex","alignItems","justifyContent","headerShown"],"mappings":"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","sourcesContent":["//user flow:\n//1st visit: home (trending groups)/search (closed groups) -> signup/signin -> pick interests -> generate feed\n\n\n\nimport 'react-native-gesture-handler';\n\n//font hooks\nimport { useFonts } from \"@use-expo/font\";\nimport * as Font from \"expo-font\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, SafeAreaView, Image, TouchableOpacity, Alert, TouchableNativeFeedback, Button, ActivityIndicator } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport Tabs from \"./app/navigation/Tabs\";\nimport GuestTabs from \"./app/navigation/GuestTabs\";\n\nimport SettingsScreen from \"./app/screens/SettingsScreen\";\nimport SearchFullScreen from \"./app/screens/SearchFullScreen\";\nimport SubscriptionGroupScreen from \"./app/screens/SubscriptionGroupScreen\";\nimport CommunityGroupScreen from \"./app/screens/CommunityGroupScreen\";\nimport WelcomeScreen from \"./app/screens/WelcomeScreen\";\nimport SigninScreen from './app/screens/SigninScreen';\nimport SignupScreen from \"./app/screens/SignupScreen\";\nimport ProfileOverviewScreen from \"./app/screens/ProfileOverview\";\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { useEffect, useState } from 'react/cjs/react.development';\n\nimport { AuthContext } from './app/components/context';\n\nimport axios from \"axios\";\nconst customFonts = {\n  \"Aktiv Regular\": require(\"./assets/fonts/AktivGroteskCorp-Regular.ttf\"),\n  \"Aktiv Bold\": require(\"./assets/fonts/AktivGroteskCorp-Bold.ttf\"),\n  \"Larsseit Bold\": require(\"./assets/fonts/Larsseit-ExtraBold.ttf\")\n};\n\nconst Stack = createStackNavigator();\n\n\nasync function _loadFontsAsync(cb) {\n  await Font.loadAsync(customFonts);\n  cb();\n};\nif(process.env.NODE_ENV && process.env.NODE_ENV == \"development\"){\n  window.api_prefix = \"http://192.168.2.20:8080\";\n}else{\n  window.api_prefix = \"https://api.traderz.com\";\n}\n\n\n\nexport default function App() {\n\n  const [isFontLoading, setIsFontLoading] = useState(true);\n  // const [userToken, setUserToken] = useState(null);\n  // const [isAppLoading, setIsAppLoading] = useState(false);\n\n  const initialSigninState = {\n    isAppLoading: true,\n    userToken: null,\n    userName: null\n  }\n  const signinReducer = (prevState, action) => {\n    switch (action.type) {\n      case \"RETRIEVE_TOKEN\":\n        return {\n          ...prevState,\n          userToken: action.token,\n          isAppLoading: false\n        };\n      case \"SIGNIN\":\n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isAppLoading: false\n        };\n      case \"SIGNOUT\":\n        return {\n          ...prevState,\n          userName: null,\n          userToken: null,\n          isAppLoading: false\n        };\n      case \"SIGNUP\":\n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isAppLoading: false\n        };\n    }\n  }\n\n  const [signinState, dispatch] = React.useReducer(signinReducer, initialSigninState);\n\n  const authContext = React.useMemo(() => ({\n    signIn: async (email, password, cb) => {\n      let userToken = null;\n      axios.post(window.api_prefix+\"/login\", {email:email, password:password}).then(resp=>{\n        if(resp.data.success == false){\n          cb(resp.data.message);\n        }\n      }).catch(err=>{\n        cb(\"There has been a server error, please try again.\");\n      });\n      // fetch(window.api_prefix+\"/login\", {\n      //   method: 'POST',\n      //   headers: {\n      //     Accept: 'application/json',\n      //     'Content-Type': 'application/json'\n      //   },\n      //   body: JSON.stringify({\n      //     email: email,\n      //     password: password\n      //   })\n      // }).then(response=>{response.json()}).then(json=>{\n      //   console.log(email+\" 2 \"+password);\n      //   console.log(json);\n      // }).catch(err=>{\n      //   console.log(email+\" 1 \"+password);\n      //   console.log(err);\n      // });\n      // if (email == \"email\" && password == \"password\") {\n      //   userToken = \"dmkd\"\n      //   try {\n      //     await AsyncStorage.setItem('userToken', userToken);\n      //   } catch (e) {\n      //     console.log(e);\n      //   }\n      // }\n      // dispatch({ type: \"SIGNIN\", id: email, token: userToken });\n      // alert(\"Signed in\");\n      // setUserToken(\"oyooyyo\");\n      // setIsAppLoading(false);\n    },\n    signOut: async () => {\n      try {\n        await AsyncStorage.removeItem('userToken');\n      } catch (e) {\n        console.log(e);\n      }\n      dispatch({ type: \"SIGNOUT\" });\n    },\n    signUp: () => {\n      setUserToken(\"eidmeik\");\n      setIsAppLoading(false);\n    }\n  }), []);\n\n\n  _loadFontsAsync(() => {\n    setIsFontLoading(false)\n  });\n\n  useEffect(() => {\n    setTimeout(async () => {\n      let userToken = null;\n      try {\n        userToken = await AsyncStorage.getItem('userToken');\n        if (userToken != null) {\n          dispatch({ type: \"RETRIEVE_TOKEN\", token: \"dnjsdnj\" });\n        } else {\n          dispatch({ type: \"SIGNOUT\" });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }, 1000);\n  }, []);\n\n  if (isFontLoading) {\n    return null;\n  }\n  if (signinState.isAppLoading) {\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <ActivityIndicator size=\"large\" color=\"#000\" />\n      </View>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <StatusBar translucent backgroundColor=\"rgba(0,0,0,0)\" translucent={true} />\n      <NavigationContainer>\n        {\n          signinState.userToken != null ? (\n            <Stack.Navigator\n              screenOptions={{\n                headerShown: false,\n                //   cardStyleInterpolator: ({index, current, next, layouts: {screen}}) => {\n                //     const translateX = current.progress.interpolate({\n                //         inputRange: [index - 1, index, index + 1],\n                //         outputRange: [screen.width, 0, 0],\n                //     });\n\n                //     const opacity = next?.progress.interpolate({\n                //       inputRange: [\n                //         index - 1,\n                //         index - 0.99,\n                //         index,\n                //         index + 0.99,\n                //         index + 1\n                //     ],\n                //     outputRange: [0, 1, 1, 0.3, 0]\n                //     });\n\n                //     return {cardStyle: {opacity, transform: [{translateX}]}};\n                // },\n              }}>\n              <Stack.Screen name=\"tabHome\" component={Tabs} />\n              <Stack.Screen name=\"settings\" component={SettingsScreen} />\n              <Stack.Screen name=\"searchfullscreen\" component={SearchFullScreen} />\n              <Stack.Screen name=\"group_screen\" component={SubscriptionGroupScreen} />\n              <Stack.Screen name=\"community_screen\" component={CommunityGroupScreen} />\n              <Stack.Screen name=\"profileOverviewScreen\" component={ProfileOverviewScreen} />\n            </Stack.Navigator>\n          )\n            :\n            <Stack.Navigator\n              screenOptions={{\n                headerShown: false,\n                //   cardStyleInterpolator: ({index, current, next, layouts: {screen}}) => {\n                //     const translateX = current.progress.interpolate({\n                //         inputRange: [index - 1, index, index + 1],\n                //         outputRange: [screen.width, 0, 0],\n                //     });\n\n                //     const opacity = next?.progress.interpolate({\n                //       inputRange: [\n                //         index - 1,\n                //         index - 0.99,\n                //         index,\n                //         index + 0.99,\n                //         index + 1\n                //     ],\n                //     outputRange: [0, 1, 1, 0.3, 0]\n                //     });\n\n                //     return {cardStyle: {opacity, transform: [{translateX}]}};\n                // },\n              }}>\n              {/* <Stack.Screen name=\"welcomeScreen\" component={WelcomeScreen} /> */}\n              <Stack.Screen name=\"tabHome\" component={GuestTabs} />\n              <Stack.Screen name=\"signinScreen\" component={SigninScreen} />\n              <Stack.Screen name=\"signupScreen\" component={SignupScreen} />\n              <Stack.Screen name=\"searchfullscreen\" component={SearchFullScreen} />\n              <Stack.Screen name=\"profileOverviewScreen\" component={ProfileOverviewScreen} />\n            </Stack.Navigator>\n        }\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}