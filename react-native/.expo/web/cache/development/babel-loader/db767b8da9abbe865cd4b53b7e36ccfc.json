{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marc\\\\Documents\\\\trading\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { useFonts } from \"@use-expo/font\";\nimport * as Font from \"expo-font\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Tabs from \"./app/navigation/Tabs\";\nimport SettingsScreen from \"./app/screens/SettingsScreen\";\nimport SearchFullScreen from \"./app/screens/SearchFullScreen\";\nimport SubscriptionGroupScreen from \"./app/screens/SubscriptionGroupScreen\";\nimport CommunityGroupScreen from \"./app/screens/CommunityGroupScreen\";\nimport { useState } from 'react/cjs/react.development';\nvar customFonts = {\n  \"Aktiv Regular\": require(\"./assets/fonts/AktivGroteskCorp-Regular.ttf\"),\n  \"Aktiv Bold\": require(\"./assets/fonts/AktivGroteskCorp-Bold.ttf\"),\n  \"Larsseit Bold\": require(\"./assets/fonts/Larsseit-ExtraBold.ttf\")\n};\nvar Stack = createStackNavigator();\n\nfunction _loadFontsAsync(cb) {\n  return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n        case 2:\n          cb();\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\n;\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  _loadFontsAsync(function () {\n    setLoaded(true);\n  });\n\n  if (!isLoaded) {\n    return null;\n  }\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"tabHome\",\n    screenOptions: {\n      headerShown: false,\n      cardStyleInterpolator: function cardStyleInterpolator(_ref) {\n        var index = _ref.index,\n            current = _ref.current,\n            next = _ref.next,\n            screen = _ref.layouts.screen;\n        var translateX = current.progress.interpolate({\n          inputRange: [index - 1, index, index + 1],\n          outputRange: [screen.width, 0, 0]\n        });\n        var opacity = next == null ? void 0 : next.progress.interpolate({\n          inputRange: [index - 1, index - 0.99, index, index + 0.99, index + 1],\n          outputRange: [0, 1, 1, 0.3, 0]\n        });\n        return {\n          cardStyle: {\n            opacity: opacity,\n            transform: [{\n              translateX: translateX\n            }]\n          }\n        };\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"tabHome\",\n    component: Tabs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"settings\",\n    component: SettingsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"searchfullscreen\",\n    component: SearchFullScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"group_screen\",\n    component: SubscriptionGroupScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"community_screen\",\n    component: CommunityGroupScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Marc/Documents/trading/App.js"],"names":["useFonts","Font","StatusBar","React","NavigationContainer","createStackNavigator","Tabs","SettingsScreen","SearchFullScreen","SubscriptionGroupScreen","CommunityGroupScreen","useState","customFonts","require","Stack","_loadFontsAsync","cb","loadAsync","App","isLoaded","setLoaded","headerShown","cardStyleInterpolator","index","current","next","screen","layouts","translateX","progress","interpolate","inputRange","outputRange","width","opacity","cardStyle","transform"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\n\n//font hooks\nimport { useFonts } from \"@use-expo/font\";\nimport * as Font from \"expo-font\";\n\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, SafeAreaView, Image, TouchableOpacity, Alert, TouchableNativeFeedback, Button } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport Tabs from \"./app/navigation/Tabs\";\n\nimport SettingsScreen from \"./app/screens/SettingsScreen\";\nimport SearchFullScreen from \"./app/screens/SearchFullScreen\";\nimport SubscriptionGroupScreen from \"./app/screens/SubscriptionGroupScreen\";\nimport CommunityGroupScreen from \"./app/screens/CommunityGroupScreen\";\n\n\n\nimport { useState } from 'react/cjs/react.development';\n\nconst customFonts = {\n  \"Aktiv Regular\": require(\"./assets/fonts/AktivGroteskCorp-Regular.ttf\"),\n  \"Aktiv Bold\": require(\"./assets/fonts/AktivGroteskCorp-Bold.ttf\"),\n  \"Larsseit Bold\": require(\"./assets/fonts/Larsseit-ExtraBold.ttf\")\n};\n\nconst Stack = createStackNavigator();\n\n\nasync function _loadFontsAsync(cb) {\n  await Font.loadAsync(customFonts);\n  cb();\n};\n\n\nexport default function App() {\n\n  const [isLoaded, setLoaded] = useState(false);\n\n  _loadFontsAsync(()=>{\n    setLoaded(true)\n  });\n\n  if(!isLoaded){\n    return null;\n  }\n\n  \n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        initialRouteName=\"tabHome\"\n      screenOptions={{\n        headerShown: false,\n        cardStyleInterpolator: ({index, current, next, layouts: {screen}}) => {\n          const translateX = current.progress.interpolate({\n              inputRange: [index - 1, index, index + 1],\n              outputRange: [screen.width, 0, 0],\n          });\n\n          const opacity = next?.progress.interpolate({\n            inputRange: [\n              index - 1,\n              index - 0.99,\n              index,\n              index + 0.99,\n              index + 1\n          ],\n          outputRange: [0, 1, 1, 0.3, 0]\n          });\n\n          return {cardStyle: {opacity, transform: [{translateX}]}};\n      },\n      }}>\n        <Stack.Screen name=\"tabHome\" component={Tabs} />\n        <Stack.Screen name=\"settings\" component={SettingsScreen} />\n        <Stack.Screen name=\"searchfullscreen\" component={SearchFullScreen} />\n        <Stack.Screen name=\"group_screen\" component={SubscriptionGroupScreen} />\n        <Stack.Screen name=\"community_screen\" component={CommunityGroupScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}